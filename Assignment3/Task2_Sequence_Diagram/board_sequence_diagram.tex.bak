%\documentclass[8pt,landscape]{article}
\documentclass[8pt]{article}
%\usepackage[landscape]{geometry}
\usepackage{pgf-umlsd}
\usepackage{float}

\usepackage{adjustbox}

\title{%
  Software construction \\
  \large Assignment 3 - Task 2
}

\begin{document}
\pagenumbering{gobble}

\maketitle
\section{Board.getUniqueInstance(Game game)}
\begin{figure}[H]
	\centering
	
  	\begin{adjustbox}{width=\textwidth}
	\begin{sequencediagram}
		\newthread{G}{: Game}{}
		\newinst[4]{B}{: Board}{}
		\newinst[1]{S}{squares: Square[ ][ ]}{}
		\newinst[1]{s}{square: Square}{}
		\newinst[1]{P}{piece: Piece}{}
		\newinst[1]{PP}{: PiecePot}{}
		\newinst[1]{SB}{: Scoreboard}{}
		
		      
		\begin{call}{G}{getUniqueInstance(this)}{B}{uniqueInstance}	
			\begin{sdblock}{alt}{[uniqueInstance == null]}
				
				% Call constructor
				\begin{callself}{B}{Board(game)}{}
					\begin{call}{B}{new Square[8][8]}{S}{squares}
					\end{call}
					
					\begin{callself}{B}{initBoard()}{}
						\begin{sdblock}{loop}{[for each column \& row in squares]}
							\begin{call}{B}{new Square(column, row)}{s}{square}
							\end{call}
						\end{sdblock}
						
						\begin{call}{B}{new PiecePot()}{PP}{piecepot}
						\end{call}
					\end{callself}
					
					\begin{callself}{B}{setPieces()}{}
						\begin{sdblock}{loop}{[for each Piece to be placed at the start]}
							\begin{call}{B}{new Piece(Color, squares(column, row))}{P}{piece}
							\end{call}
							\begin{messcall}{B}{addPiece(piece)}{PP}
							\end{messcall}
						\end{sdblock}
						
					\end{callself}
					
					\begin{call}{B}{getInstance()}{SB}{}
					\end{call}
					\begin{messcall}{B}{init(piecePot)}{SB}
					\end{messcall}
					
					
				\end{callself}
			  		
			\end{sdblock}
		\end{call}
	
	
	
	\end{sequencediagram}
	\end{adjustbox}
\end{figure}

\section{Board.move(x1, y1, x2, y2, Color)}
\begin{figure}[H]
	\centering
  	\begin{adjustbox}{width=\textwidth, height=\textheight}
		\begin{sequencediagram}
			\newthread{G}{: Game}{}
			\newinst[9]{B}{: Board}{}
			\newinst[6]{s1}{square1: Square}{}
			\newinst[4]{s2}{square2: Square}{}
			\newinst[4]{P}{currentPiece: Piece}{}
			
			\begin{messcall}{G}{move(x1, y1, x2, y2, Color)}{B}{}	
				\begin{call}{B}{isOccupied()}{s1}{boolean}
				\end{call}
				\begin{sdblock}{alt}{[boolean == false]}
					\begin{messcall}{B}{false}{G}
					\end{messcall} 					  		
				\end{sdblock}
				
				\begin{call}{B}{isOccupied()}{s2}{boolean}
				\end{call}
				\begin{sdblock}{alt}{[boolean == true]}
					\begin{messcall}{B}{false}{G}
					\end{messcall} 					  		
				\end{sdblock}
				
				\begin{call}{B}{getCurrentPiece()}{s1}{piece}
				\end{call}
				
				\begin{call}{B}{getColor()}{P}{color0}
				\end{call}
					
					
				\begin{sdblock}{alt}{[Color != color0]}
					\begin{messcall}{B}{false}{G}
					\end{messcall} 					  		
				\end{sdblock}
				
				\begin{callself}{B}{moveChecked(color,x1,y1, x2, y2)}{boolean}
					\begin{callself}{B}{doFakeMove(x1, y1, x2, y2)}{}
					\end{callself}
					
					\begin{callself}{B}{refresh()}{}
					\end{callself}
					
					\begin{call}{B}{getPlayer(color)}{G}{player}
					\end{call}
					\begin{call}{B}{checkCheck(player)}{G}{boolean}
					\end{call}
				
					\begin{callself}{B}{doFakeMove(x2, y2, x1, y1)}{}
					\end{callself}
					
					\begin{callself}{B}{refresh()}{}
					\end{callself}
				\end{callself}
				\begin{sdblock}{alt}{[boolean == true]}
					\begin{messcall}{B}{false}{G}
					\end{messcall} 					  		
				\end{sdblock}
				
				\begin{call}{B}{getCurrentPiece()}{s1}{piece}
					
				\end{call}
				\begin{call}{B}{move(square1, square2, squares)}{P}{boolean}
				\end{call}
					
				\begin{sdblock}{alt}{[boolean == true]}
					\begin{call}{B}{removePiece()}{s1}{piece}
					\end{call}
					\begin{messcall}{B}{addPiece(piece)}{s2}
					\end{messcall}
					\begin{messcall}{B}{true}{G}
					\end{messcall} 	
				\end{sdblock}
				
				\begin{sdblock}{alt}{[else]}
					\begin{messcall}{B}{false}{G}
					\end{messcall} 	
				\end{sdblock}
				
				
			\end{messcall}{G}
				  	
		\end{sequencediagram}
	\end{adjustbox}
\end{figure}

\section{Board.eat(x1, y1, x2, y2, Color)}
\begin{figure}[H]
	\centering
  	\begin{adjustbox}{width=\textwidth}
		\begin{sequencediagram}
			\newthread{G}{: Game}{}
			\newinst[4]{B}{: Board}{}
			\newinst[2]{s1}{square1: Square}{}
			\newinst[2]{s2}{square2: Square}{}
			\newinst[2]{P}{currentPiece: Piece}{}
			
			\begin{messcall}{G}{eat(x1, y1, x2, y2, Color)}{B}{}	
				\begin{call}{B}{isOccupied()}{s1}{boolean}
				\end{call}
				\begin{sdblock}{alt}{[boolean == true]}
					\begin{messcall}{B}{false}{G}
					\end{messcall} 					  		
				\end{sdblock}
				
				\begin{call}{B}{getCurrentPiece()}{s1}{piece}
				\end{call}
				\begin{call}{B}{getColor()}{P}{color0}
				\end{call}
				\begin{sdblock}{alt}{[Color != color0]}
					\begin{messcall}{B}{false}{G}
					\end{messcall} 					  		
				\end{sdblock}
				
				\begin{call}{B}{getCurrentPiece()}{s1}{piece}
				\end{call}
				\begin{call}{B}{eat(square1, square2, squares)}{P}{boolean}
				\end{call}
				\begin{sdblock}{alt}{[boolean == true]}
				    \begin{call}{B}{removePiece()}{s2}{piece}
				    \end{call}
				    \begin{messcall}{B}{removePiece(piece)}{P}{}
					\end{messcall}
					\begin{call}{B}{removePiece()}{s1}{piece}
					\end{call}
					\begin{messcall}{B}{addPiece(piece)}{s2}
					\end{messcall}
					\begin{messcall}{B}{true}{G}
					\end{messcall} 	
				\end{sdblock}
				
				\begin{sdblock}{alt}{[else]}
					\begin{messcall}{B}{false}{G}
					\end{messcall} 	
				\end{sdblock}
			\end{messcall}{G}
		\end{sequencediagram}
	\end{adjustbox}
\end{figure}

\section{Board.enPassant(x1, y1, x2, y2, Color)}
\begin{figure}[H]
	\centering
  	\begin{adjustbox}{width=\textwidth, height=\textheight /2}
		\begin{sequencediagram}
			\newthread{G}{: Game}{}
			\newinst[4]{B}{: Board}{}
			\newinst[1]{s1}{square1: Square}{}
			\newinst[1]{s2}{square2: Square}{}
			\newinst[1]{s3}{square\_over\_square2: Square}{}
			\newinst[1]{s4}{square\_under\_square2: Square}{}
			\newinst[1]{P}{currentPiece: Piece}{}
			
			\begin{messcall}{G}{enPassant(x1, y1, x2, y2, Color)}{B}{}	
			    \begin{call}{B}{removePiece()}{s1}{piece}
				\end{call}
				\begin{messcall}{B}{addPiece(piece)}{s2}
				\end{messcall}
				
				\begin{sdblock}{alt}{[color == Black]}
				    \begin{call}{B}{removePiece()}{s3}{piece}
				    \end{call}
				    \begin{messcall}{B}{removePiece(piece)}{P}{}
					\end{messcall}
				\end{sdblock}
				
				\begin{sdblock}{alt}{[else]}
				    \begin{call}{B}{removePiece()}{s4}{piece}
				    \end{call}
				    \begin{messcall}{B}{removePiece(piece)}{P}{}
					\end{messcall}
				\end{sdblock}
			\end{messcall}{G}
		\end{sequencediagram}
	\end{adjustbox}
\end{figure}

\section{Board.promition(x1, y1, x2, y2, String, Color)}
\begin{figure}[H]
	\centering
  	\begin{adjustbox}{width=\textwidth, height=\textheight}
		\begin{sequencediagram}
			\newthread{G}{: Game}{}
			\newinst[5]{B}{: Board}{}
			\newinst[1]{s1}{square1: Square}{}
			\newinst[1]{s2}{square2: Square}{}
			\newinst[1]{P}{piece: Piece}{}
			\newinst[1]{PP}{: PiecePot}{}
			
			\begin{call}{G}{promotion(x1, y1, x2, y2, String, Color)}{B}{true}	
				\begin{callself}{B}{move(x1, y1, x2, y2, color)}{boolean}
				\end{callself}
				\begin{sdblock}{alt}{[boolean == false]}
				    \begin{messcall}{B}{false}{G}
					\end{messcall} 	
				\end{sdblock}
				
				\begin{sdblock}{alt}{[String == "T"]}
				    \begin{call}{B}{new Rook(Color, squares(column, row))}{P}{promoted}
					\end{call}
				\end{sdblock}
				\begin{sdblock}{alt}{[String == "N"]}
				    \begin{call}{B}{new Knight(Color, squares(column, row))}{P}{promoted}
					\end{call}
				\end{sdblock}
				\begin{sdblock}{alt}{[String == "B"]}
				    \begin{call}{B}{new Bishop(Color, squares(column, row))}{P}{promoted}
					\end{call}
				\end{sdblock}
				\begin{sdblock}{alt}{[else]}
				    \begin{call}{B}{new Queen(Color, squares(column, row))}{P}{promoted}
					\end{call}
				\end{sdblock}
			
			    \begin{call}{B}{removePiece()}{s2}{pawn}
				\end{call}
				
				\begin{messcall}{B}{addPiece(promoted)}{s2}{}
				\end{messcall}
				
				\begin{messcall}{B}{replace(pawn, promoted)}{PP}{}
				\end{messcall}
				
			\end{call}{G}
		\end{sequencediagram}
	\end{adjustbox}
\end{figure}

\section{Board.castleLong(Color)}
\begin{figure}[H]
	\centering
  	\begin{adjustbox}{height=\textheight}
		\begin{sequencediagram}
			\newthread{G}{: Game}{}
			\newinst[4]{B}{: Board}{}
			\newinst[1]{s0}{square: Square}{}
			\newinst[1]{s1}{square1: Square}{}
			\newinst[1]{s2}{square2: Square}{}
			\newinst[1]{K}{king: Piece}{}
			\newinst[1]{R}{rook: Piece}{}
			\begin{messcall}{G}{castleLong(Color)}{B}{}	
				\begin{sdblock}{alt}{[color == Black]}
					\begin{call}{B}{}{s1}{boolean0}	
					\end{call}	
					\begin{call}{B}{}{s2}{boolean1}	
					\end{call}	
				    \begin{sdblock}{alt}{[!(boolean0 \&\& boolean1)]}
				   		\begin{messcall}{B}{false}{G}
				   		\end{messcall}
					\end{sdblock}
					
					\begin{call}{B}{getCurrentPiece()}{s1}{piece}	
					\end{call}	
					\begin{call}{B}{hasMoved()}{K}{boolean0}	
					\end{call}
					\begin{call}{B}{getCurrentPiece()}{s2}{piece}	
					\end{call}	
					\begin{call}{B}{hasMoved()}{R}{boolean1}	
					\end{call}
				    \begin{sdblock}{alt}{[boolean0 $ || $ boolean1]}
				   		\begin{messcall}{B}{false}{G}
				   		\end{messcall}
					\end{sdblock}
					
					\begin{sdblock}{loop}{[go through squares between left Rook and King (i = 1 to 3)]}
						\begin{call}{B}{isOccupied()}{s0}{boolean}	
						\end{call}
						\begin{sdblock}{alt}{[boolean == true]}
				   			\begin{messcall}{B}{false}{G}
				   			\end{messcall}
						\end{sdblock}
						\begin{callself}{B}{moveChecked(Color, 4, 0, i, 0)}{boolean}	
						\end{callself}
						\begin{sdblock}{alt}{[boolean == true]}
				   			\begin{messcall}{B}{false}{G}
				   			\end{messcall}
						\end{sdblock}
					\end{sdblock}
					
					\begin{call}{B}{removePiece()}{s1}{temp}	
					\end{call}
					\begin{callself}{B}{move(0, 0, 3, 0, color)}{boolean}	
					\end{callself}
					\begin{messcall}{B}{hasMoved()}{K}	
					\end{messcall}
					\begin{messcall}{B}{true}{G}
				   	\end{messcall}
				\end{sdblock}
				
				\begin{sdblock}{alt}{[else]}
					\begin{call}{B}{}{s1}{boolean0}	
					\end{call}	
					\begin{call}{B}{}{s2}{boolean1}	
					\end{call}	
				    \begin{sdblock}{alt}{[!(boolean0 \&\& boolean1)]}
				   		\begin{messcall}{B}{false}{G}
				   		\end{messcall}
					\end{sdblock}
					
					\begin{call}{B}{getCurrentPiece()}{s1}{piece}	
					\end{call}	
					\begin{call}{B}{hasMoved()}{K}{boolean0}	
					\end{call}
					\begin{call}{B}{getCurrentPiece()}{s2}{piece}	
					\end{call}	
					\begin{call}{B}{hasMoved()}{R}{boolean1}	
					\end{call}
				    \begin{sdblock}{alt}{[boolean0 $ || $ boolean1]}
				   		\begin{messcall}{B}{false}{G}
				   		\end{messcall}
					\end{sdblock}
					
					\begin{sdblock}{loop}{[go through squares between left Rook and King (i = 1 to 3)]}
						\begin{call}{B}{isOccupied()}{s0}{boolean}	
						\end{call}
						\begin{sdblock}{alt}{[boolean == true]}
				   			\begin{messcall}{B}{false}{G}
				   			\end{messcall}
						\end{sdblock}
						\begin{callself}{B}{moveChecked(Color, 4, 7, i, 7)}{boolean}	
						\end{callself}
						\begin{sdblock}{alt}{[boolean == true]}
				   			\begin{messcall}{B}{false}{G}
				   			\end{messcall}
						\end{sdblock}
					\end{sdblock}
					
					\begin{call}{B}{removePiece()}{s1}{temp}	
					\end{call}
					\begin{callself}{B}{move(0, 7, 3, 7, color)}{boolean}	
					\end{callself}
					\begin{messcall}{B}{hasMoved()}{K}	
					\end{messcall}
					\begin{messcall}{B}{true}{G}
				   	\end{messcall}
				\end{sdblock}
				
			\end{messcall}{G}
		\end{sequencediagram}
	\end{adjustbox}
\end{figure}

\section{Board.castleShort(Color)}
\begin{figure}[H]
	\centering
  	\begin{adjustbox}{height=\textheight}
		\begin{sequencediagram}
			\newthread{G}{: Game}{}
			\newinst[4]{B}{: Board}{}
			\newinst[1]{s0}{square: Square}{}
			\newinst[1]{s1}{square1: Square}{}
			\newinst[1]{s2}{square2: Square}{}
			\newinst[1]{K}{king: Piece}{}
			\newinst[1]{R}{rook: Piece}{}
			\begin{messcall}{G}{castleShort(Color)}{B}
				\begin{sdblock}{alt}{[color == Black]}
					\begin{call}{B}{}{s1}{boolean0}	
					\end{call}	
					\begin{call}{B}{}{s2}{boolean1}	
					\end{call}	
				    \begin{sdblock}{alt}{[!(boolean0 \&\& boolean1)]}
				   		\begin{messcall}{B}{false}{G}
				   		\end{messcall}
					\end{sdblock}
					
					\begin{call}{B}{getCurrentPiece()}{s1}{piece}	
					\end{call}	
					\begin{call}{B}{hasMoved()}{K}{boolean0}	
					\end{call}
					\begin{call}{B}{getCurrentPiece()}{s2}{piece}	
					\end{call}	
					\begin{call}{B}{hasMoved()}{R}{boolean1}	
					\end{call}
				    \begin{sdblock}{alt}{[boolean0 $ || $ boolean1]}
				   		\begin{messcall}{B}{false}{G}
				   		\end{messcall}
					\end{sdblock}
					
					\begin{sdblock}{loop}{[go through squares between right Rook and King (i = 5 to 6)]}
						\begin{call}{B}{isOccupied()}{s0}{boolean}	
						\end{call}
						\begin{sdblock}{alt}{[boolean == true]}
				   			\begin{messcall}{B}{false}{G}
				   			\end{messcall}
						\end{sdblock}
						\begin{callself}{B}{moveChecked(Color, 4, 0, i, 0)}{boolean}	
						\end{callself}
						\begin{sdblock}{alt}{[boolean == true]}
				   			\begin{messcall}{B}{false}{G}
				   			\end{messcall}
						\end{sdblock}
					\end{sdblock}
					
					\begin{call}{B}{removePiece()}{s1}{temp}	
					\end{call}
					\begin{callself}{B}{move(7, 0, 5, 0, color)}{boolean}	
					\end{callself}
					\begin{messcall}{B}{hasMoved()}{K}	
					\end{messcall}
					\begin{messcall}{B}{true}{G}
				   	\end{messcall}
				\end{sdblock}
				
				\begin{sdblock}{alt}{[else]}
					\begin{call}{B}{}{s1}{boolean0}	
					\end{call}	
					\begin{call}{B}{}{s2}{boolean1}	
					\end{call}	
				    \begin{sdblock}{alt}{[!(boolean0 \&\& boolean1)]}
				   		\begin{messcall}{B}{false}{G}
				   		\end{messcall}
					\end{sdblock}
					
					\begin{call}{B}{getCurrentPiece()}{s1}{piece}	
					\end{call}	
					\begin{call}{B}{hasMoved()}{K}{boolean0}	
					\end{call}
					\begin{call}{B}{getCurrentPiece()}{s2}{piece}	
					\end{call}	
					\begin{call}{B}{hasMoved()}{R}{boolean1}	
					\end{call}
				    \begin{sdblock}{alt}{[boolean0 $ || $ boolean1]}
				   		\begin{messcall}{B}{false}{G}
				   		\end{messcall}
					\end{sdblock}
					
					\begin{sdblock}{loop}{[go through squares between right Rook and King (i = 5 to 6)]}
						\begin{call}{B}{isOccupied()}{s0}{boolean}	
						\end{call}
						\begin{sdblock}{alt}{[boolean == true]}
				   			\begin{messcall}{B}{false}{G}
				   			\end{messcall}
						\end{sdblock}
						\begin{callself}{B}{moveChecked(Color, 4, 7, i, 7)}{boolean}	
						\end{callself}
						\begin{sdblock}{alt}{[boolean == true]}
				   			\begin{messcall}{B}{false}{G}
				   			\end{messcall}
						\end{sdblock}
					\end{sdblock}
					
					\begin{call}{B}{removePiece()}{s1}{temp}	
					\end{call}
					\begin{callself}{B}{move(7, 7, 5, 7, color)}{boolean}	
					\end{callself}
					\begin{messcall}{B}{hasMoved()}{K}	
					\end{messcall}
					\begin{messcall}{B}{true}{G}
				   	\end{messcall}
				\end{sdblock}
				
			\end{messcall}{G}
		\end{sequencediagram}
	\end{adjustbox}
\end{figure}

\section{Board.refresh()}
\begin{figure}[H]
	\centering
  	\begin{adjustbox}{width=\textwidth}
		\begin{sequencediagram}
			\newthread{G}{: Game}{}
			\newinst[2]{B}{: Board}{}
			\newinst[2]{S}{squares: Squares[ ][ ]}{}
			\newinst[2]{P}{currentPiece: Piece}{}
			      
			% refresh() call
			\begin{call}{G}{refresh()}{B}{}	
				\begin{sdblock}{loop}{[for each square]}
					% isOccupied() call  	ø
					\begin{call}{B}{isOccupied()}{S}{boolean}
					\end{call}
					\begin{sdblock}{alt}{[boolean == true]}
						\begin{call}{B}{getCurrentPiece()}{S}{currentPiece}
						\end{call}
						
				  		\begin{messcall}{B}{getMoveSquares(squares)}{P}
						\end{messcall}
				  		
				  		
				  	\end{sdblock}
	    
	    
				\end{sdblock}	
			\end{call}
		
		
		
		\end{sequencediagram}
	\end{adjustbox}
\end{figure}

\end{document}